# ввожу счетчик матчей, через цикл с предусловием проверяю, сколько команд сейчас (n), дальше в зависимости от четности
# или нечетности изменяю кол-во команд и матчей (если четное кол-во, то команд станет меньше в два раза,
# а матчей будет сыграно n/2) (если команд нечетное кол-во, то 1 команда сразу в след. этап, соответственно останется
# (половина команд от n) + 1, а матчей будет сыграно половина от (n - 1) или целочисленный остаток от деления n на 2)
# это будет работать, пока n не станет 1.
# в итоге вывожу кол-во матчей
# сложность равна O(N), где N - количество раз, когда команды все еще не равны 1


def numberOfMatches(n):
    matches = 0                         # кол-во матчей равно нулю
    while n > 1:                        # пока команд больше 1 (если команда всего одна, то нужно 0 матчей, вернется 0 сразу)
        if n % 2 != 0:                  # если команд нечетное кол-во
            matches += int(n // 2)      # то нужно сыграть половине команд с другой половиной (за вычетом одной, которая автоматом в след. этап), делим нацело на 2, явно приводим к инту (округление в меньшую сторону)
            n = int(n // 2) + 1         # теперь команд стало 'остаток от деления нацело всех изначальных на 2' + 1 команда
        else:                           # если четное количество команд
            matches += int(n / 2)       # то матчей нужно ровно половина от всех команд (играют n/2 против n/2)
            n = int(n / 2)              # теперь n = половина от изначального кол-ва команд
    return matches                      # возвращаем кол-во матчей


print(numberOfMatches(76345))


# супер логичное решение: если у нас n команд, то команда-победитель выиграет ровно n-1 раз, потому что есть n-1
# соперников (чтобы выиграть, нужно победить всех), а когда останется 1 команда, то матчи играть уже ненужно
def numberOfMatches1(n):
    return n - 1


print(numberOfMatches1(456))
